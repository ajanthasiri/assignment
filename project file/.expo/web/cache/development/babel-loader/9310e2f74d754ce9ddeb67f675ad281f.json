{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\andbandu\\\\Desktop\\\\SignUp-Login\\\\components\\\\SignUp\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./style\";\nimport Feather from \"@expo/vector-icons/Feather\";\n\nvar signup = function (_Component) {\n  _inherits(signup, _Component);\n\n  var _super = _createSuper(signup);\n\n  function signup(props) {\n    var _this;\n\n    _classCallCheck(this, signup);\n\n    _this = _super.call(this, props);\n\n    _this.InsertRecord = function () {\n      var Email = _this.state.email;\n      var Password = _this.state.password;\n      var ConfirmPw = _this.state.confirmPw;\n      var checkEmail = RegExp(/^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,3})$/i);\n\n      if (Email.length == 0 || Password.length == 0 || ConfirmPw.length == 0) {\n        alert(\"Required Field Is Missing!!!\");\n      } else if (!checkEmail.test(Email)) {\n        alert(\"invalid email!!!\");\n      } else if (Password.length < 8) {\n        alert(\"Minimum 08 characters required!!!\");\n      } else if (!/[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/.test(Password)) {\n        alert(\"Use atleast 01 special character!!!\");\n      } else if (/[ ]/.test(Password)) {\n        alert(\"Don't include space in password!!!\");\n      } else if (Password !== ConfirmPw) {\n        alert(\"Password doesnot match!!!\");\n      } else {\n        var InsertAPIURL = \"http://10.0.2.2:80/SignIn/SignIn.php\";\n        var headers = {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        };\n        var Data = {\n          Email: Email,\n          Password: Password\n        };\n        fetch(InsertAPIURL, {\n          method: 'POST',\n          headers: headers,\n          body: JSON.stringify(Data)\n        }).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          alert(response[0].Message);\n\n          _this.props.navigation.navigate(\"SignInScreen\");\n        }).catch(function (error) {\n          alert(\"Error Occured\" + error);\n        });\n      }\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      confirmPw: '',\n      check_textInputChange: false,\n      secureTextEntry: true,\n      confirmSecureTextEntry: true\n    };\n    return _this;\n  }\n\n  _createClass(signup, [{\n    key: \"updateSecureTextEntry\",\n    value: function updateSecureTextEntry() {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        secureTextEntry: !this.state.secureTextEntry\n      }));\n    }\n  }, {\n    key: \"updateConfirmSecureTextEntry\",\n    value: function updateConfirmSecureTextEntry() {\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        confirmSecureTextEntry: !this.state.confirmSecureTextEntry\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.viewStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.action,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Enter Name\",\n        placeholderTextColor: \"#ff0000\",\n        style: styles.textInput,\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      })), React.createElement(View, {\n        style: styles.action,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Enter Email\",\n        placeholderTextColor: \"#ff0000\",\n        style: styles.textInput,\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      })), React.createElement(View, {\n        style: styles.action,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Enter Password\",\n        placeholderTextColor: \"#ff0000\",\n        secureTextEntry: this.state.secureTextEntry ? true : false,\n        style: styles.textInput,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.updateSecureTextEntry.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, this.state.secureTextEntry ? React.createElement(Feather, {\n        name: \"eye-off\",\n        color: \"grey\",\n        size: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 23\n        }\n      }) : React.createElement(Feather, {\n        name: \"eye\",\n        color: \"black\",\n        size: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 23\n        }\n      }))), React.createElement(View, {\n        style: styles.action,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Confirm Password\",\n        placeholderTextColor: \"#ff0000\",\n        style: styles.textInput,\n        onChangeText: function onChangeText(confirmPw) {\n          return _this2.setState({\n            confirmPw: confirmPw\n          });\n        },\n        secureTextEntry: this.state.confirmSecureTextEntry ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.updateConfirmSecureTextEntry.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, this.state.confirmSecureTextEntry ? React.createElement(Feather, {\n        name: \"eye-off\",\n        color: \"grey\",\n        size: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 23\n        }\n      }) : React.createElement(Feather, {\n        name: \"eye\",\n        color: \"black\",\n        size: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 23\n        }\n      }))), React.createElement(View, {\n        style: styles.loginButtonSection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, React.createElement(Pressable, {\n        style: styles.loginButton,\n        onPress: function onPress() {\n          _this2.InsertRecord();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 23\n        }\n      }, \"Register\"))));\n    }\n  }]);\n\n  return signup;\n}(Component);\n\nexport { signup as default };","map":{"version":3,"sources":["C:/Users/andbandu/Desktop/SignUp-Login/components/SignUp/index.js"],"names":["React","Component","styles","Feather","signup","props","InsertRecord","Email","state","email","Password","password","ConfirmPw","confirmPw","checkEmail","RegExp","length","alert","test","InsertAPIURL","headers","Data","fetch","method","body","JSON","stringify","then","response","json","Message","navigation","navigate","catch","error","check_textInputChange","secureTextEntry","confirmSecureTextEntry","setState","viewStyle","action","textInput","updateSecureTextEntry","bind","updateConfirmSecureTextEntry","loginButtonSection","loginButton","text"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, TextInput, Button, TouchableOpacity, Pressable, Text } from 'react-native';\r\nimport styles from './style';\r\nimport Feather from 'react-native-vector-icons/Feather';\r\n\r\nexport default class signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      email : '',\r\n      password : '',\r\n      confirmPw : '',\r\n      check_textInputChange : false,\r\n      secureTextEntry : true,\r\n      confirmSecureTextEntry : true\r\n    };\r\n  } \r\n  \r\n  InsertRecord=()=>{\r\n    var Email = this.state.email;\r\n    var Password = this.state.password;\r\n    var ConfirmPw = this.state.confirmPw;\r\n    var checkEmail = RegExp(/^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,3})$/i);\r\n  \r\n    if ((Email.length==0) || (Password.length==0) || (ConfirmPw.length==0)){\r\n      alert(\"Required Field Is Missing!!!\");\r\n    }else if (!(checkEmail).test(Email)){\r\n      alert(\"invalid email!!!\");\r\n    }\r\n\r\n    else if (Password.length<8){\r\n      alert(\"Minimum 08 characters required!!!\");\r\n    }else if (!((/[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/).test(Password))){\r\n      alert(\"Use atleast 01 special character!!!\");\r\n    }else if (((/[ ]/).test(Password))){\r\n      alert(\"Don't include space in password!!!\");\r\n    }else if(Password !== ConfirmPw){\r\n      alert(\"Password doesnot match!!!\");\r\n    }\r\n    \r\n    \r\n    else{\r\n      var InsertAPIURL = \"http://10.0.2.2:80/SignIn/SignIn.php\";  \r\n\r\n      var headers = {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      };\r\n      \r\n      var Data ={\r\n        Email: Email,\r\n        Password: Password\r\n      };\r\n\r\n\r\n    fetch(InsertAPIURL,{\r\n        method:'POST',\r\n        headers:headers,\r\n        body: JSON.stringify(Data) \r\n    })\r\n    .then((response)=>response.json()) \r\n    .then((response)=>{\r\n      alert(response[0].Message);    \r\n      this.props.navigation.navigate(\"SignInScreen\"); \r\n    })\r\n    .catch((error)=>{\r\n        alert(\"Error Occured\" + error);\r\n    })\r\n    }\r\n  }\r\n  \r\n  updateSecureTextEntry(){\r\n    this.setState({\r\n        ...this.state,\r\n        secureTextEntry: !this.state.secureTextEntry\r\n    });\r\n  }\r\n\r\n  updateConfirmSecureTextEntry(){\r\n    this.setState({\r\n        ...this.state,\r\n        confirmSecureTextEntry: !this.state.confirmSecureTextEntry\r\n    });\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.viewStyle}>\r\n        <View style={styles.action}>\r\n        <TextInput\r\n                placeholder=\"Enter Name\"\r\n                placeholderTextColor=\"#ff0000\"\r\n                style={styles.textInput}\r\n                onChangeText={email=>this.setState({email})}\r\n                />\r\n                \r\n                </View>\r\n                <View style={styles.action}>\r\n        <TextInput\r\n                placeholder=\"Enter Email\"\r\n                placeholderTextColor=\"#ff0000\"\r\n                style={styles.textInput}\r\n                onChangeText={email=>this.setState({email})}\r\n                />\r\n                \r\n                </View>\r\n                <View style={styles.action}>\r\n\r\n            <TextInput\r\n                placeholder=\"Enter Password\"\r\n                placeholderTextColor=\"#ff0000\"\r\n                secureTextEntry={this.state.secureTextEntry ? true : false}\r\n                style={styles.textInput}\r\n                onChangeText={password=>this.setState({password})}\r\n                />\r\n                <TouchableOpacity\r\n                  onPress={this.updateSecureTextEntry.bind(this)}    \r\n                  >\r\n                  {this.state.secureTextEntry ?\r\n                      <Feather\r\n                      name=\"eye-off\"\r\n                      color=\"grey\"\r\n                      size={20}\r\n                      />\r\n                      :\r\n                      <Feather\r\n                      name=\"eye\"\r\n                      color=\"black\"\r\n                      size={20}\r\n                      />\r\n                    }\r\n                </TouchableOpacity> \r\n                  </View>\r\n                <View style={styles.action}>\r\n            <TextInput\r\n                placeholder=\"Confirm Password\"\r\n                placeholderTextColor=\"#ff0000\"\r\n                style={styles.textInput}\r\n                onChangeText={confirmPw=>this.setState({confirmPw})}\r\n                secureTextEntry={this.state.confirmSecureTextEntry ? true : false}\r\n                /> \r\n                <TouchableOpacity\r\n                  onPress={this.updateConfirmSecureTextEntry.bind(this)}    \r\n                  >\r\n                  {this.state.confirmSecureTextEntry ?\r\n                      <Feather\r\n                      name=\"eye-off\"\r\n                      color=\"grey\"\r\n                      size={20}\r\n                      />\r\n                      :\r\n                      <Feather\r\n                      name=\"eye\"\r\n                      color=\"black\" \r\n                      size={20}\r\n                      />\r\n                    }\r\n                </TouchableOpacity>  \r\n                    </View> \r\n\r\n\r\n                <View style={styles.loginButtonSection}>\r\n                  <Pressable\r\n                    style={styles.loginButton} \r\n                    onPress={()=>{\r\n                      this.InsertRecord()\r\n                    }}\r\n                    >\r\n                      <Text \r\n                        style={styles.text}\r\n                      >Register</Text>\r\n                    </Pressable>\r\n                  </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}